/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Locality;

import Model.EcoSystem;
import Model.Enterprise.Enterprise;
import Model.UserDetails.UserDetails;
import Model.Utils.HeaderColors;
import Model.Utils.Validation;
import Model.WorkQueue.PatientMedicRequest;
import Model.WorkQueue.WorkRequest;
import com.twilio.Twilio;
import com.twilio.rest.api.v2010.account.Message;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SejalChandak
 */
public class RequestMedicLocalityAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestMedicLocalityAreaJPanel
     */
    
    JPanel userProcessContainer;
    UserDetails userAccount;
    Enterprise enterprise;
    EcoSystem ecoSystem;
    private Validation validation;
    boolean emailValid;


    public RequestMedicLocalityAreaJPanel(JPanel userProcessContainer, UserDetails userAccount, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;
        this.validation = new Validation();
        emailValidateMessage.setVisible(false);
        emailSuccessLabel.setVisible(false);
        tblRequestTablePatient.getTableHeader().setDefaultRenderer(new HeaderColors());
        
        fillTheRequestTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequestTablePatient = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        txtPatientAge = new javax.swing.JTextField();
        txtPatientGender = new javax.swing.JTextField();
        emailSuccessLabel = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        txtPurposeVisit = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        emailValidateMessage = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        phoneNumberText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblRequestTablePatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Gender", "Purpose", "Request Date", "Resolve Date", "Doctor Name", "Status", "Sender", "Receiver"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequestTablePatient);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 690, 245));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Victim Request for Medic");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 340, 50));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Victim Name : ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 20));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Age : ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, 30));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Gender : ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, 30));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("Purpose of Visit : ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, 20));
        add(txtPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 130, -1));
        add(txtPatientAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 130, -1));
        add(txtPatientGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 130, -1));

        emailSuccessLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tick.gif"))); // NOI18N
        emailSuccessLabel.setText("jLabel7");
        add(emailSuccessLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, 40, 40));

        btnCreate.setBackground(new java.awt.Color(102, 217, 255));
        btnCreate.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnCreate.setText("Create Request");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 570, -1, -1));

        txtPurposeVisit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPurposeVisitActionPerformed(evt);
            }
        });
        add(txtPurposeVisit, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 130, -1));

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 200, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/emergencyServiceManager700x.png"))); // NOI18N
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 1020, 580));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("Phone Number :");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, -1, 20));

        jButton1.setBackground(new java.awt.Color(102, 217, 255));
        jButton1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton1.setText("<<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 11, -1, 37));
        add(emailValidateMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 190, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Victim Details Form");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 170, 40));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Emergency_ser_team.jpeg"))); // NOI18N
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, 130, 150));

        phoneNumberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberTextActionPerformed(evt);
            }
        });
        add(phoneNumberText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 200, -1));

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel11.setText("Email Address :");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, -1, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void txtPurposeVisitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPurposeVisitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPurposeVisitActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        
        if(txtPatientAge.getText().isEmpty() || txtPatientGender.getText().isEmpty() || txtPatientName.getText().isEmpty() || txtPurposeVisit.getText().isEmpty()|| txtEmail.getText().isEmpty()){
         JOptionPane.showMessageDialog(this, "Please add all the fields");
        return;
        }
        
        if (!txtEmail.getText().contains("@")) {
            JOptionPane.showMessageDialog(this, "Email format is incorrect!!");
            return;
        }
        if (!txtEmail.getText().contains(".")) {
            JOptionPane.showMessageDialog(this, "Email format is incorrect!!");
            return;
        }



        
        PatientMedicRequest request = new PatientMedicRequest();
        request.setPatientName(txtPatientName.getText());
        
        try{
                request.setPatientAge(Integer.parseInt(txtPatientAge.getText()));

        }catch(NumberFormatException e){
         JOptionPane.showMessageDialog(this, "Please enter numeric value for age field");
        return;
        }
        
        request.setPatientGender(txtPatientGender.getText());
        request.setPurposeOfVisit(txtPurposeVisit.getText());
        request.setEmailAdd(txtEmail.getText());
        
        Date requestDate = new Date();
        request.setRequestDate(requestDate); 
        
        request.setStatus("Requested");
        request.setSender(userAccount);
        userAccount.getWorkQueue().getWorkRequestList().add(request);
        enterprise.getWorkQueue().getWorkRequestList().add(request);
        ecoSystem.getWorkQueue().getWorkRequestList().add(request);
        validation.sendTextMessage(txtEmail.getText(), "Regarding Medic Appointment Schedule", "Hi" + " " + txtPatientName.getText() +","
        + "\n" + "Your appointment request has been sent to the Clinic. Please wait for the Medic to schedule an appointment.");
        
        
        try
      {
        String ACCOUNT_SID = "AC61c11df1bbe597f5caf2e58e3cfcb74c";
        String Auth_Token = "e5ae99fbfaf9c59a150c807e04108d3f";
        
        Twilio.init(ACCOUNT_SID, Auth_Token);
        
        Message message = Message.creator(new com.twilio.type.PhoneNumber(phoneNumberText.getText()), 
                new com.twilio.type.PhoneNumber("+16506633201"), 
                "Hi, " + txtPatientName.getText() +" Thank You for contacting Helping Hands, Your request has been noted").create();
        message.getSid();
        JOptionPane.showMessageDialog(null, "Message Sent successfully to "+phoneNumberText.getText());
      }
      catch(Exception e)
      {
          JOptionPane.showMessageDialog(null, "Error Message "+e);
      }
        
        resetFields();
        fillTheRequestTable();
    }//GEN-LAST:event_btnCreateActionPerformed
   
       
        
    public void resetFields() {
        txtPatientAge.setText("");
        txtPatientGender.setText("");
        txtPatientName.setText("");
        txtPurposeVisit.setText("");
        txtEmail.setText("");
        phoneNumberText.setText("");
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
        // TODO add your handling code here:
         if (!validation.emailValidator(txtEmail.getText())) {
            emailValidateMessage.setVisible(true);
            emailValid = false;
        } else {
            txtEmail.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            txtEmail.setForeground(Color.BLACK);
            emailValidateMessage.setVisible(false);
            emailSuccessLabel.setVisible(true);
            emailValid = true;
            int delay = 2500; //milliseconds
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    emailSuccessLabel.setVisible(false);
                }
            };
            javax.swing.Timer tick = new javax.swing.Timer(delay, taskPerformer);
            tick.setRepeats(false);
            tick.start();
        }
    }//GEN-LAST:event_txtEmailKeyTyped

    private void phoneNumberTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel emailSuccessLabel;
    private javax.swing.JLabel emailValidateMessage;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField phoneNumberText;
    private javax.swing.JTable tblRequestTablePatient;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientGender;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPurposeVisit;
    // End of variables declaration//GEN-END:variables

    private void fillTheRequestTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblRequestTablePatient.getModel();
        
        model.setRowCount(0);
        

        for (WorkRequest work : ecoSystem.getWorkQueue().getWorkRequestList()){
           if(work instanceof PatientMedicRequest && work.getSender() == userAccount){ 
            Object[] row = new Object[10];
            row[0] = ((PatientMedicRequest) work).getPatientName();
            row[1] = ((PatientMedicRequest) work).getPatientAge();
            row[2] = ((PatientMedicRequest) work).getPatientGender();
            row[3] = ((PatientMedicRequest) work).getPurposeOfVisit();
            row[4] = ((PatientMedicRequest) work).getRequestDate();
            row[5] = ((PatientMedicRequest) work).getResolveDate();
            row[6] = ((PatientMedicRequest) work).getMedicName();
            row[7] = work;
            row[8] = ((PatientMedicRequest) work).getSender().getNameuser();
            
            if(((PatientMedicRequest) work).getReceiver() != null){
            row[9] = ((PatientMedicRequest) work).getReceiver().getNameuser();
            }
            
            
  
            model.addRow(row);
           }
        }
        
        
    }
}
